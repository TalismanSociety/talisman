import type { MetadataDef } from "@polkadot/extension-inject/types"

const metadataInit: MetadataDef[] = [
  {
    chain: "Polkadot",
    chainType: "substrate",
    color: "#e6007a",
    genesisHash: "0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3",
    icon: "polkadot",
    specVersion: 9122,
    ss58Format: 0,
    tokenDecimals: 10,
    tokenSymbol: "DOT",
    types: {},
    metaCalls:
      "",
  },
  {
    chain: "Kusama",
    chainType: "substrate",
    color: "#000000",
    genesisHash: "0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe",
    icon: "polkadot",
    specVersion: 9122,
    ss58Format: 2,
    tokenDecimals: 12,
    tokenSymbol: "KSM",
    types: {},
    metaCalls:
      "",
  },
  {
    chain: "Rococo",
    chainType: "substrate",
    color: "#6f36dc",
    genesisHash: "0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff",
    icon: "polkadot",
    specVersion: 9135,
    ss58Format: 42,
    tokenDecimals: 12,
    tokenSymbol: "ROC",
    types: {
      FullIdentification: "()",
      Keys: "SessionKeys7B",
      AssetInstance: "AssetInstanceV0",
      Fungibility: "FungibilityV0",
      Junction: "JunctionV0",
      Junctions: "JunctionsV0",
      MultiAsset: "MultiAssetV0",
      MultiAssetFilter: "MultiAssetFilterV0",
      MultiLocation: "MultiLocationV0",
      Response: "ResponseV0",
      WildFungibility: "WildFungibilityV0",
      WildMultiAsset: "WildMultiAssetV0",
      Xcm: "XcmV0",
      XcmError: "XcmErrorV0",
      XcmOrder: "XcmOrderV0",
    },
    metaCalls:
      "",
  },
]

export default metadataInit
