import { memo } from "react"

export type RiskAnalysisIconVariant =
  | "arrow"
  | "arrow-right"
  | "verified"
  | "blowfish-logo"
  | "question-mark"
  | "exclamation"
  | "dev-tools"
  | "cog"
  | "multi-text"
  | "identification"
  | "minus"
  | "lock-open"
  | "solana"
  | "user"

export const RiskAnalysisIcon = memo<{ variant: RiskAnalysisIconVariant } & IconProps>(
  function Icon({ variant, color, size }) {
    switch (variant) {
      case "arrow":
        return <Arrow color={color} size={size} />
      case "arrow-right":
        return <ArrowRight color={color} size={size} />
      case "verified":
        return <Verified color={color} size={size} />
      case "blowfish-logo":
        return <BlowfishLogo color={color} size={size} />
      case "cog":
        return <Cog color={color} size={size} />
      case "question-mark":
        return <QuestionMark color={color} size={size} />
      case "exclamation":
        return <Exclamation color={color} size={size} />
      case "dev-tools":
        return <DevTools color={color} size={size} />
      case "multi-text":
        return <MultiText color={color} size={size} />
      case "identification":
        return <Identification color={color} size={size} />
      case "minus":
        return <Minus color={color} size={size} />
      case "lock-open":
        return <LockOpen color={color} size={size} />
      case "user":
        return <User color={color} size={size} />
      case "solana":
        return <Solana size={size} />
    }

    return null
  }
)

type IconProps = {
  size: number
  color?: string
}

const Arrow: React.FC<IconProps> = memo<IconProps>(function Arrow({ size, color = "black" }) {
  return (
    <svg
      style={{ width: `${size}px`, height: `${size}px` }}
      viewBox="0 0 13 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.5 11L11.5 1M11.5 1H3.1M11.5 1V9.4"
        stroke={color}
        strokeOpacity="0.5"
        strokeWidth="1.5"
      />
    </svg>
  )
})

const ArrowRight: React.FC<IconProps> = memo<IconProps>(function ArrowRight({
  size,
  color = "black",
}) {
  return (
    <svg
      style={{ width: `${size}px`, height: `${size}px` }}
      viewBox="0 0 448 512"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z"
        fill={color}
      />
    </svg>
  )
})

const Verified: React.FC<IconProps> = memo(function Verified({ size, color = "black" }) {
  return (
    <svg
      style={{ width: `${size}px`, height: `${size}px` }}
      viewBox="0 0 19 19"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M15.5025 11.9858C15.9545 11.7468 16.3328 11.389 16.5967 10.951C16.8606 10.513 17 10.0113 17 9.5C17 8.98867 16.8606 8.48702 16.5967 8.04902C16.3328 7.61102 15.9545 7.25325 15.5025 7.01421C15.6532 6.52558 15.6677 6.00512 15.5447 5.50882C15.4216 5.01252 15.1655 4.55917 14.8039 4.19756C14.4424 3.83595 13.9891 3.57975 13.4928 3.45654C12.9965 3.33333 12.476 3.34777 11.9873 3.4983C11.7483 3.04605 11.3905 2.66754 10.9524 2.40353C10.5143 2.13952 10.0124 2 9.50091 2C8.98938 2 8.48754 2.13952 8.04941 2.40353C7.61129 2.66754 7.25348 3.04605 7.01451 3.4983C6.52585 3.34764 6.00535 3.33306 5.50903 3.45614C5.0127 3.57922 4.55933 3.83529 4.19769 4.19681C3.83605 4.55833 3.57984 5.0116 3.45663 5.50787C3.33341 6.00413 3.34785 6.5246 3.49839 7.01327C3.04611 7.25223 2.66758 7.61002 2.40355 8.04812C2.13952 8.48622 2 8.98803 2 9.49953C2 10.011 2.13952 10.5128 2.40355 10.9509C2.66758 11.389 3.04611 11.7468 3.49839 11.9858C3.34772 12.4744 3.33314 12.9949 3.45623 13.4912C3.57931 13.9875 3.8354 14.4408 4.19694 14.8024C4.55848 15.1641 5.01178 15.4202 5.50808 15.5435C6.00437 15.6667 6.52487 15.6522 7.01357 15.5017C7.25254 15.9539 7.61035 16.3325 8.04848 16.5965C8.4866 16.8605 8.98844 17 9.49997 17C10.0115 17 10.5134 16.8605 10.9515 16.5965C11.3896 16.3325 11.7474 15.9539 11.9864 15.5017C12.475 15.6524 12.9955 15.6669 13.4919 15.5439C13.9882 15.4208 14.4416 15.1647 14.8032 14.8032C15.1648 14.4417 15.421 13.9884 15.5443 13.4921C15.6675 12.9959 15.653 12.4745 15.5025 11.9858ZM13.1159 7.80531C13.1703 7.7306 13.2094 7.64591 13.231 7.55608C13.2526 7.46626 13.2563 7.37305 13.2419 7.28179C13.2275 7.19053 13.1953 7.103 13.147 7.0242C13.0988 6.9454 13.0355 6.87687 12.9608 6.82253C12.8861 6.76818 12.8014 6.72909 12.7115 6.70747C12.6217 6.68586 12.5285 6.68215 12.4372 6.69655C12.346 6.71096 12.2584 6.74319 12.1796 6.79143C12.1008 6.83966 12.0323 6.90294 11.9779 6.97766L8.71304 11.4675L6.95077 9.70527C6.88588 9.63816 6.80828 9.58464 6.72249 9.54784C6.6367 9.51104 6.54444 9.49169 6.45109 9.49092C6.35774 9.49016 6.26517 9.50799 6.17879 9.54337C6.09241 9.57876 6.01394 9.631 5.94796 9.69704C5.88198 9.76307 5.82981 9.84159 5.79451 9.928C5.7592 10.0144 5.74145 10.107 5.74231 10.2003C5.74316 10.2937 5.7626 10.3859 5.79948 10.4717C5.83637 10.5574 5.88996 10.635 5.95714 10.6998L8.3006 13.0431C8.37242 13.115 8.45898 13.1704 8.55429 13.2056C8.64961 13.2408 8.75142 13.2549 8.85272 13.247C8.95402 13.2391 9.0524 13.2093 9.14108 13.1597C9.22976 13.1101 9.30663 13.0418 9.3664 12.9597L13.1159 7.80531Z"
        fill={color}
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M18.2526 11.2895C17.9271 11.8297 17.4605 12.271 16.9031 12.5658C17.0887 13.1686 17.1066 13.8116 16.9546 14.4236C16.8026 15.0357 16.4866 15.5948 16.0406 16.0406C15.5946 16.4865 15.0354 16.8023 14.4233 16.9541C13.8111 17.1058 13.1692 17.088 12.5665 16.9021C12.2718 17.4598 11.8305 17.9268 11.2901 18.2523C10.7498 18.5779 10.1309 18.75 9.49996 18.75C8.86908 18.75 8.25014 18.5779 7.70979 18.2523C7.16943 17.9268 6.72813 17.4598 6.4334 16.9021C5.83067 17.0877 5.18872 17.1056 4.57663 16.9536C3.96453 16.8016 3.40546 16.4857 2.95956 16.0396C2.51366 15.5937 2.19782 15.0346 2.04602 14.4225C1.89421 13.8104 1.91219 13.1684 2.09801 12.5658C1.5402 12.2711 1.07335 11.8298 0.747715 11.2895C0.422081 10.7492 0.25 10.1303 0.25 9.49942C0.25 8.86857 0.422081 8.24967 0.747715 7.70935C1.07335 7.16902 1.5402 6.72775 2.09801 6.43303C1.91235 5.83034 1.89454 5.18843 2.04651 4.57637C2.19847 3.96431 2.51446 3.40527 2.96048 2.9594C3.40651 2.51352 3.96566 2.1977 4.5778 2.04591C5.18993 1.89411 5.83188 1.91209 6.43456 2.0979C6.72929 1.54013 7.17059 1.0733 7.71094 0.747686C8.2513 0.422071 8.87023 0.25 9.50112 0.25C10.132 0.25 10.7509 0.422071 11.2913 0.747686C11.8317 1.0733 12.273 1.54013 12.5677 2.0979C13.1704 1.91225 13.8123 1.89444 14.4245 2.0464C15.0366 2.19836 15.5956 2.51434 16.0415 2.96032C16.4874 3.40631 16.8033 3.96544 16.9551 4.57754C17.1068 5.18965 17.0889 5.83155 16.9031 6.43419C17.4605 6.72901 17.9271 7.17026 18.2526 7.71046C18.5781 8.25066 18.75 8.86936 18.75 9.5C18.75 10.1306 18.5781 10.7493 18.2526 11.2895ZM16.5967 10.951C16.3328 11.389 15.9545 11.7467 15.5025 11.9858C15.653 12.4745 15.6675 12.9959 15.5443 13.4921C15.421 13.9884 15.1648 14.4417 14.8032 14.8032C14.4416 15.1647 13.9882 15.4208 13.4919 15.5439C12.9955 15.6669 12.475 15.6524 11.9864 15.5017C11.7474 15.9539 11.3896 16.3325 10.9515 16.5965C10.5134 16.8605 10.0115 17 9.49997 17C8.98844 17 8.4866 16.8605 8.04848 16.5965C7.61035 16.3325 7.25254 15.9539 7.01357 15.5017C6.52487 15.6522 6.00437 15.6667 5.50808 15.5435C5.01178 15.4202 4.55848 15.1641 4.19694 14.8024C3.8354 14.4408 3.57931 13.9875 3.45623 13.4912C3.33314 12.9949 3.34772 12.4744 3.49839 11.9858C3.04611 11.7468 2.66758 11.389 2.40355 10.9509C2.13952 10.5128 2 10.011 2 9.49953C2 8.98803 2.13952 8.48622 2.40355 8.04812C2.66758 7.61002 3.04611 7.25223 3.49839 7.01327C3.34785 6.5246 3.33341 6.00413 3.45663 5.50787C3.57984 5.0116 3.83605 4.55833 4.19769 4.19681C4.55933 3.83529 5.0127 3.57922 5.50903 3.45614C6.00535 3.33306 6.52585 3.34764 7.01451 3.4983C7.25348 3.04605 7.61129 2.66754 8.04941 2.40353C8.48754 2.13952 8.98938 2 9.50091 2C10.0124 2 10.5143 2.13952 10.9524 2.40353C11.3905 2.66754 11.7483 3.04605 11.9873 3.4983C12.476 3.34777 12.9965 3.33333 13.4928 3.45654C13.9891 3.57975 14.4424 3.83595 14.8039 4.19756C15.1655 4.55917 15.4216 5.01252 15.5447 5.50882C15.6677 6.00512 15.6532 6.52558 15.5025 7.01421C15.9545 7.25325 16.3328 7.61102 16.5967 8.04902C16.8606 8.48702 17 8.98867 17 9.5C17 10.0113 16.8606 10.513 16.5967 10.951ZM13.231 7.55608C13.2094 7.64591 13.1703 7.7306 13.1159 7.80531L9.3664 12.9597C9.30663 13.0418 9.22976 13.1101 9.14108 13.1597C9.0524 13.2093 8.95402 13.2391 8.85272 13.247C8.75142 13.2549 8.64961 13.2408 8.55429 13.2056C8.45898 13.1704 8.37242 13.115 8.3006 13.0431L5.95714 10.6998C5.88996 10.635 5.83637 10.5574 5.79948 10.4717C5.7626 10.3859 5.74316 10.2937 5.74231 10.2003C5.74145 10.107 5.7592 10.0144 5.79451 9.928C5.82981 9.84159 5.88198 9.76307 5.94796 9.69704C6.01394 9.631 6.09241 9.57876 6.17879 9.54337C6.26517 9.50799 6.35774 9.49016 6.45109 9.49092C6.54444 9.49169 6.6367 9.51104 6.72249 9.54784C6.80828 9.58464 6.88588 9.63816 6.95077 9.70527L8.71304 11.4675L11.9779 6.97766C12.0323 6.90294 12.1008 6.83966 12.1796 6.79143C12.2584 6.74319 12.346 6.71096 12.4372 6.69655C12.5285 6.68215 12.6217 6.68586 12.7115 6.70747C12.8014 6.72909 12.8861 6.76818 12.9608 6.82253C13.0355 6.87687 13.0988 6.9454 13.147 7.0242C13.1953 7.103 13.2275 7.19053 13.2419 7.28179C13.2563 7.37305 13.2526 7.46626 13.231 7.55608Z"
        fill="white"
      />
    </svg>
  )
})

const BlowfishLogo: React.FC<IconProps> = memo(function BlowfishLogo({ size, color = "black" }) {
  return (
    <svg
      style={{ width: `${size}px`, height: `${size}px` }}
      viewBox="0 0 48 47"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M23.8203 0L29.3415 7.43694L26.5161 9.53449L23.8503 5.94366L21.3445 9.39104L18.4981 7.32209L23.8203 0ZM40.4377 6.8876L39.0236 15.8285L35.5479 15.2787L36.2137 11.0692L31.7896 11.7233L31.275 8.24226L40.4377 6.8876ZM7.30073 6.92154L16.4635 8.27619L15.9488 11.7572L11.5247 11.1031L12.1905 15.3127L8.71487 15.8624L7.30073 6.92154ZM6.41192 23.4199L10.0027 20.7541L7.9052 17.9287L0.468262 23.4499L7.79035 28.7721L9.8593 25.9257L6.41192 23.4199ZM39.7993 17.9287L47.2363 23.4499L39.9142 28.7721L37.8452 25.9257L41.2926 23.4199L37.7018 20.7541L39.7993 17.9287ZM11.5544 35.7455L12.2085 31.3214L8.72749 30.8067L7.37283 39.9695L16.3137 38.5553L15.764 35.0797L11.5544 35.7455ZM39.0279 30.8237L40.3826 39.9864L31.4417 38.5723L31.9915 35.0966L36.201 35.7624L35.5469 31.3383L39.0279 30.8237ZM29.3415 39.3311L23.8203 46.768L18.4981 39.4459L21.3445 37.377L23.8503 40.8243L26.5161 37.2335L29.3415 39.3311Z"
        fill={color}
      />
    </svg>
  )
})

const QuestionMark = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM10 7C9.63113 7 9.3076 7.19922 9.13318 7.50073C8.85664 7.97879 8.24491 8.14215 7.76685 7.86561C7.28879 7.58906 7.12543 6.97733 7.40197 6.49927C7.91918 5.60518 8.88833 5 10 5C11.6569 5 13 6.34315 13 8C13 9.30622 12.1652 10.4175 11 10.8293V11C11 11.5523 10.5523 12 10 12C9.44773 12 9.00001 11.5523 9.00001 11V10C9.00001 9.44772 9.44773 9 10 9C10.5523 9 11 8.55228 11 8C11 7.44772 10.5523 7 10 7ZM10 15C10.5523 15 11 14.5523 11 14C11 13.4477 10.5523 13 10 13C9.44772 13 9 13.4477 9 14C9 14.5523 9.44772 15 10 15Z"
      fill={color}
    />
  </svg>
))
QuestionMark.displayName = "QuestionMark"

const Exclamation = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM11 14C11 14.5523 10.5523 15 10 15C9.44772 15 9 14.5523 9 14C9 13.4477 9.44772 13 10 13C10.5523 13 11 13.4477 11 14ZM10 5C9.44772 5 9 5.44772 9 6V10C9 10.5523 9.44772 11 10 11C10.5523 11 11 10.5523 11 10V6C11 5.44772 10.5523 5 10 5Z"
      fill={color}
    />
  </svg>
))
Exclamation.displayName = "Exclamation"

const DevTools = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M6.99985 2C6.59539 2 6.23075 2.24364 6.07597 2.61732C5.92119 2.99099 6.00675 3.42111 6.29275 3.70711L6.99985 4.41421V8.17157C6.99985 8.43679 6.8945 8.69114 6.70696 8.87868L2.70696 12.8787C0.817066 14.7686 2.15556 18 4.82828 18H15.1714C17.8441 18 19.1826 14.7686 17.2927 12.8787L13.2927 8.87868C13.1052 8.69114 12.9999 8.43679 12.9999 8.17157V4.41421L13.707 3.70711C13.993 3.42111 14.0785 2.99099 13.9237 2.61732C13.769 2.24364 13.4043 2 12.9999 2H6.99985ZM8.99985 8.17157V4H10.9999V8.17157C10.9999 8.96722 11.3159 9.73028 11.8785 10.2929L12.9061 11.3204C12.1892 11.1537 11.4377 11.1874 10.7349 11.4217L10.2647 11.5784C9.44364 11.8521 8.55596 11.8521 7.73489 11.5784L7.17244 11.3909C7.13436 11.3782 7.09607 11.3667 7.05762 11.3564L8.12117 10.2929C8.68378 9.73028 8.99985 8.96722 8.99985 8.17157Z"
      fill={color}
    />
  </svg>
))
DevTools.displayName = "DevTools"

const Cog = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.4892 3.17094C11.1102 1.60969 8.8898 1.60969 8.51078 3.17094C8.26594 4.17949 7.11045 4.65811 6.22416 4.11809C4.85218 3.28212 3.28212 4.85218 4.11809 6.22416C4.65811 7.11045 4.17949 8.26593 3.17094 8.51078C1.60969 8.8898 1.60969 11.1102 3.17094 11.4892C4.17949 11.7341 4.65811 12.8896 4.11809 13.7758C3.28212 15.1478 4.85218 16.7179 6.22417 15.8819C7.11045 15.3419 8.26594 15.8205 8.51078 16.8291C8.8898 18.3903 11.1102 18.3903 11.4892 16.8291C11.7341 15.8205 12.8896 15.3419 13.7758 15.8819C15.1478 16.7179 16.7179 15.1478 15.8819 13.7758C15.3419 12.8896 15.8205 11.7341 16.8291 11.4892C18.3903 11.1102 18.3903 8.8898 16.8291 8.51078C15.8205 8.26593 15.3419 7.11045 15.8819 6.22416C16.7179 4.85218 15.1478 3.28212 13.7758 4.11809C12.8896 4.65811 11.7341 4.17949 11.4892 3.17094ZM10 13C11.6569 13 13 11.6569 13 10C13 8.34315 11.6569 7 10 7C8.34315 7 7 8.34315 7 10C7 11.6569 8.34315 13 10 13Z"
      fill={color}
    />
  </svg>
))
Cog.displayName = "Cog"

const MultiText = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3 5C3 4.44772 3.44772 4 4 4H16C16.5523 4 17 4.44772 17 5C17 5.55228 16.5523 6 16 6H4C3.44772 6 3 5.55228 3 5Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3 10C3 9.44772 3.44772 9 4 9H10C10.5523 9 11 9.44772 11 10C11 10.5523 10.5523 11 10 11H4C3.44772 11 3 10.5523 3 10Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M3 15C3 14.4477 3.44772 14 4 14H16C16.5523 14 17 14.4477 17 15C17 15.5523 16.5523 16 16 16H4C3.44772 16 3 15.5523 3 15Z"
      fill={color}
    />
  </svg>
))
MultiText.displayName = "MultiText"

const Identification = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2C9.44772 2 9 2.44772 9 3V4C9 4.55228 9.44772 5 10 5C10.5523 5 11 4.55228 11 4V3C11 2.44772 10.5523 2 10 2Z"
      fill={color}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M4 4H7C7 5.65685 8.34315 7 10 7C11.6569 7 13 5.65685 13 4H16C17.1046 4 18 4.89543 18 6V15C18 16.1046 17.1046 17 16 17H4C2.89543 17 2 16.1046 2 15V6C2 4.89543 2.89543 4 4 4ZM6.5 11C7.32843 11 8 10.3284 8 9.5C8 8.67157 7.32843 8 6.5 8C5.67157 8 5 8.67157 5 9.5C5 10.3284 5.67157 11 6.5 11ZM8.95048 15C8.98327 14.8384 9.00049 14.6712 9.00049 14.5C9.00049 13.1193 7.8812 12 6.50049 12C5.11978 12 4.00049 13.1193 4.00049 14.5C4.00049 14.6712 4.0177 14.8384 4.0505 15H8.95048ZM12 9C11.4477 9 11 9.44772 11 10C11 10.5523 11.4477 11 12 11H15C15.5523 11 16 10.5523 16 10C16 9.44772 15.5523 9 15 9H12ZM11 13C11 12.4477 11.4477 12 12 12H14C14.5523 12 15 12.4477 15 13C15 13.5523 14.5523 14 14 14H12C11.4477 14 11 13.5523 11 13Z"
      fill={color}
    />
  </svg>
))
Identification.displayName = "Identification"

const Minus = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18ZM7 9C6.44772 9 6 9.44772 6 10C6 10.5523 6.44772 11 7 11H13C13.5523 11 14 10.5523 14 10C14 9.44772 13.5523 9 13 9H7Z"
      fill={color}
    />
  </svg>
))
Minus.displayName = "Minus"

const LockOpen = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2C7.23858 2 5 4.23858 5 7V9C3.89543 9 3 9.89543 3 11V16C3 17.1046 3.89543 18 5 18H15C16.1046 18 17 17.1046 17 16V11C17 9.89543 16.1046 9 15 9H7V7C7 5.34315 8.34315 4 10 4C11.3965 4 12.5725 4.95512 12.9055 6.24926C13.0432 6.78411 13.5884 7.1061 14.1232 6.96844C14.6581 6.83078 14.9801 6.28559 14.8424 5.75074C14.2874 3.59442 12.3312 2 10 2Z"
      fill={color}
    />
  </svg>
))
LockOpen.displayName = "LockOpen"

const User = memo<IconProps>(({ size, color = "black" }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M18 10C18 14.4183 14.4183 18 10 18C5.58172 18 2 14.4183 2 10C2 5.58172 5.58172 2 10 2C14.4183 2 18 5.58172 18 10ZM12 7C12 8.10457 11.1046 9 10 9C8.89543 9 8 8.10457 8 7C8 5.89543 8.89543 5 10 5C11.1046 5 12 5.89543 12 7ZM9.99993 11C7.98239 11 6.24394 12.195 5.45374 13.9157C6.55403 15.192 8.18265 16 9.99998 16C11.8173 16 13.4459 15.1921 14.5462 13.9158C13.756 12.195 12.0175 11 9.99993 11Z"
      fill={color}
    />
  </svg>
))
User.displayName = "User"

const Solana = memo<IconProps>(({ size }) => (
  <svg
    style={{ width: `${size}px`, height: `${size}px` }}
    viewBox="0 0 6 7"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M1.03053 5.075C1.0497 5.05192 1.07287 5.03339 1.09864 5.0205C1.12442 5.00762 1.15227 5.00064 1.18053 5H5.89344C5.9134 5.00031 5.93281 5.00702 5.9494 5.01931C5.966 5.03161 5.97905 5.04897 5.98698 5.0693C5.99491 5.08964 5.99738 5.11208 5.99407 5.13394C5.9908 5.15579 5.98192 5.17613 5.96847 5.1925L4.96947 6.425C4.9503 6.44807 4.92713 6.46661 4.90135 6.4795C4.87558 6.49239 4.84773 6.49936 4.81947 6.5H0.103541C0.0836005 6.49969 0.0641653 6.49298 0.0475735 6.48069C0.0309822 6.46839 0.0179408 6.45103 0.0100181 6.4307C0.00209544 6.41036 -0.000371092 6.38792 0.00291498 6.36606C0.00620106 6.34421 0.0151002 6.32387 0.0285421 6.3075L1.03053 5.075ZM5.97297 4.05333C5.98642 4.0697 5.9953 4.09004 5.99857 4.11189C6.00188 4.13375 5.99941 4.15619 5.99148 4.17653C5.98355 4.19687 5.9705 4.21423 5.9539 4.22652C5.93731 4.23881 5.9179 4.24552 5.89794 4.24583L1.18352 4.25C1.15527 4.24936 1.12742 4.24239 1.10164 4.2295C1.07587 4.21661 1.0527 4.19807 1.03353 4.175L0.0270419 2.94667C0.0136006 2.9303 0.00470146 2.90996 0.00141482 2.88811C-0.00187126 2.86625 0.000595274 2.84381 0.00851797 2.82347C0.0164407 2.80313 0.029482 2.78578 0.0460739 2.77348C0.0626651 2.76119 0.0821003 2.75448 0.102041 2.75417L4.81647 2.75C4.84473 2.75064 4.87258 2.75761 4.89835 2.7705C4.92413 2.78339 4.9473 2.80192 4.96647 2.825L5.97297 4.05333ZM1.03053 0.575C1.0497 0.551926 1.07287 0.53339 1.09864 0.520503C1.12442 0.507616 1.15227 0.500642 1.18053 0.5L5.89647 0.504167C5.91639 0.504479 5.93585 0.511185 5.95244 0.52348C5.96904 0.535775 5.98209 0.553134 5.98996 0.573469C5.99789 0.593804 6.00037 0.61625 5.9971 0.638106C5.99378 0.659962 5.9849 0.680297 5.97145 0.696667L4.96947 1.925C4.9503 1.94807 4.92713 1.96661 4.90135 1.9795C4.87558 1.99239 4.84773 1.99936 4.81947 2H0.103541C0.0836005 1.99969 0.0641653 1.99298 0.0475735 1.98069C0.0309822 1.96839 0.0179408 1.95103 0.0100181 1.9307C0.00209544 1.91036 -0.000371092 1.88792 0.00291498 1.86606C0.00620106 1.84421 0.0151002 1.82387 0.0285421 1.8075L1.03053 0.575Z"
      fill="url(#paint0_linear_3281_76886)"
    ></path>
    <defs>
      <linearGradient
        id="paint0_linear_3281_76886"
        x1="0.18229"
        y1="6.63083"
        x2="6.40937"
        y2="1.02656"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#9945FF"></stop>
        <stop offset="0.14" stopColor="#8A53F4"></stop>
        <stop offset="0.42" stopColor="#6377D6"></stop>
        <stop offset="0.79" stopColor="#24B0A7"></stop>
        <stop offset="0.99" stopColor="#00D18C"></stop>
        <stop offset="1" stopColor="#00D18C"></stop>
      </linearGradient>
    </defs>
  </svg>
))
Solana.displayName = "Solana"
