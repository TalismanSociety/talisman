name: Talisman CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: "Build and test"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # also get the previous commit
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Test
        run: PORT_PREFIX=talisman EXTENSION_PREFIX=talisman yarn run test
      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build
        run: COMMIT_SHA_SHORT=${{ steps.vars.outputs.sha_short }} PORT_PREFIX=talisman EXTENSION_PREFIX=talisman yarn run build:extension:ci
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./apps/extension/dist/talisman_extension_ci_${{ steps.vars.outputs.sha_short}}.zip
          retention-days: 5

  publish_snapshot:
    name: "Publish snapshot packages for the current PR"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # also get the previous commit
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: yarn
      - name: Install dependencies
        run: yarn --immutable
      - name: Bump changed package versions to a snapshot version
        run: yarn changeset version --snapshot pr${{ github.event.pull_request.number }}
      - name: Build snapshot packages
        run: yarn build:packages
      - name: Import workspace-tools yarn plugin
        run: yarn plugin import workspace-tools
      - name: Publish snapshot packages
        run: yarn workspaces foreach --verbose --no-private npm publish --tolerate-republish --tag pr${{ github.event.pull_request.number }}
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
